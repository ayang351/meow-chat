{"ast":null,"code":"import _regeneratorRuntime from\"/Users/angelyang/Desktop/realchatapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/angelyang/Desktop/realchatapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import'/Users/angelyang/Desktop/realchatapp/src/App.css';//import firebase config variables created in firebase-config file\nimport{auth,provider}from\"../firebase-config.js\";//import relevant built-in function from firebase\nimport{signInWithPopup,createUserWithEmailAndPassword}from\"firebase/auth\";import{useRef}from\"react\";//import Cookies from the universal cookie library\nimport Cookies from'universal-cookie';//create a reference for your cookie\n//can get(), set(), remove() cookies in the browser\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cookies=new Cookies();export var Auth=function Auth(authState){var setisAuth=authState.setisAuth;//function that returns a promise to allow users to sign in with a pop-up\n//provided 2 arguments: (1) the authentication info (2) the provider from firebase-config.js\nvar signInWithGoogle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return signInWithPopup(auth,provider);case 3:result=_context.sent;//set up cookies upon sign-in\n//we want the refresh token to be stored in our cookie under the name \"auth-token\"\ncookies.set(\"auth-token\",result.user.refreshToken);//set authentication to true\nsetisAuth(true);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function signInWithGoogle(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"auth\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" \"}),/*#__PURE__*/_jsx(\"button\",{className:\"app-roundedButton\",onClick:signInWithGoogle,children:\" Sign in With Google \"})]});};","map":{"version":3,"names":["auth","provider","signInWithPopup","createUserWithEmailAndPassword","useRef","Cookies","jsx","_jsx","jsxs","_jsxs","cookies","Auth","authState","setisAuth","signInWithGoogle","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_callee$","_context","prev","next","sent","set","user","refreshToken","t0","console","log","stop","apply","arguments","className","children","onClick"],"sources":["/Users/angelyang/Desktop/realchatapp/src/components/Auth.js"],"sourcesContent":["import '/Users/angelyang/Desktop/realchatapp/src/App.css';\n\n//import firebase config variables created in firebase-config file\nimport {auth, provider} from \"../firebase-config.js\"\n\n//import relevant built-in function from firebase\nimport {signInWithPopup, createUserWithEmailAndPassword} from \"firebase/auth\"\nimport { useRef } from \"react\";\n\n//import Cookies from the universal cookie library\nimport Cookies from 'universal-cookie'\n\n\n//create a reference for your cookie\n//can get(), set(), remove() cookies in the browser\nconst cookies = new Cookies();\n\n\nexport const Auth = (authState) => {\n    \n    const { setisAuth } = authState; \n\n\n\n    //function that returns a promise to allow users to sign in with a pop-up\n    //provided 2 arguments: (1) the authentication info (2) the provider from firebase-config.js\n    const signInWithGoogle = async () => {\n        \n        try {\n             //will return an object with email, displayname, profile pic\n            const result = await signInWithPopup(auth, provider);\n\n            //set up cookies upon sign-in\n            //we want the refresh token to be stored in our cookie under the name \"auth-token\"\n            cookies.set(\"auth-token\", result.user.refreshToken);\n\n            //set authentication to true\n            setisAuth(true);\n\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    \n    return (\n        <div className=\"auth\">\n            <p> </p>\n            <button className=\"app-roundedButton\" onClick={signInWithGoogle}> Sign in With Google </button>\n        </div>\n    );\n}"],"mappings":"oQAAA,MAAO,kDAAkD,CAEzD;AACA,OAAQA,IAAI,CAAEC,QAAQ,KAAO,uBAAuB,CAEpD;AACA,OAAQC,eAAe,CAAEC,8BAA8B,KAAO,eAAe,CAC7E,OAASC,MAAM,KAAQ,OAAO,CAE9B;AACA,MAAO,CAAAC,OAAO,KAAM,kBAAkB,CAGtC;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,GAAM,CAAAC,OAAO,CAAG,GAAI,CAAAL,OAAO,CAAC,CAAC,CAG7B,MAAO,IAAM,CAAAM,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAIC,SAAS,CAAK,CAE/B,GAAQ,CAAAC,SAAS,CAAKD,SAAS,CAAvBC,SAAS,CAIjB;AACA;AACA,GAAM,CAAAC,gBAAgB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,MAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAII,CAAAvB,eAAe,CAACF,IAAI,CAAEC,QAAQ,CAAC,QAA9CmB,MAAM,CAAAG,QAAA,CAAAG,IAAA,CAEZ;AACA;AACAhB,OAAO,CAACiB,GAAG,CAAC,YAAY,CAAEP,MAAM,CAACQ,IAAI,CAACC,YAAY,CAAC,CAEnD;AACAhB,SAAS,CAAC,IAAI,CAAC,CAACU,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAO,EAAA,CAAAP,QAAA,aAIhBQ,OAAO,CAACC,GAAG,CAAAT,QAAA,CAAAO,EAAI,CAAC,CAAC,yBAAAP,QAAA,CAAAU,IAAA,MAAAd,OAAA,gBAExB,kBAjBK,CAAAL,gBAAgBA,CAAA,SAAAC,IAAA,CAAAmB,KAAA,MAAAC,SAAA,OAiBrB,CAED,mBACI1B,KAAA,QAAK2B,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjB9B,IAAA,MAAA8B,QAAA,CAAG,GAAC,CAAG,CAAC,cACR9B,IAAA,WAAQ6B,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAExB,gBAAiB,CAAAuB,QAAA,CAAC,uBAAqB,CAAQ,CAAC,EAC9F,CAAC,CAEd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}