{"ast":null,"code":"var _jsxFileName = \"/Users/angelyang/Desktop/realchatapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\n// import './index.css';\nimport { Auth } from './components/Auth';\n//imports for our cookies\nimport Cookies from 'universal-cookie';\nimport { Chat } from './components/chat';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from './firebase-config';\nimport './App.css';\nimport catImage from './images/catimg.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nfunction App() {\n  _s();\n  //will constantly check T/F whether the user is authenticated or not when app is running\n  //must check the refresh token that was stored inside Auth.js using the cookies's getter under the name \"auth-token\"\n  //initial authentication value will be set to the auth-token; null if never authenticated\n  const [isAuth, setIsAuth] = useState(cookies.get(\"auth-token\"));\n\n  //state that keeps track of our chatroom\n  const [room, setRoom] = useState(null);\n\n  //state that keeps track of user chat name\n  const [userChatName, setUserChatName] = useState(\"\");\n\n  //used to hold a reference to the user input\n  const roomInputRef = useRef(null);\n  const chatNameRef = useRef(null);\n\n  //function to sign user out of their google account\n  const signUserOut = async () => {\n    await signOut(auth);\n    //remove the cookies from the browser with login info\n    cookies.remove(\"auth-token\");\n    //set authentication back to false\n    setIsAuth(false);\n    //disable the room to null\n    setRoom(null);\n  };\n\n  // updates the states for both room name and user's chat name\n  const setRoomAndName = (roomName, chatName) => {\n    setRoom(roomName);\n    setUserChatName(chatName);\n  };\n\n  //if the user is not authenticated, show them the login page.\n  //Else, navigate to the chat room\n  if (!isAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Welcome to Meow Chat Room \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app-img\",\n        src: catImage,\n        alt: \"Image of a cat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Auth, {\n        setIsAuth: setIsAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  //if user is authenticated...\n  //if room exist --> go to the chat room \n  //if room does NOT exist --> create chat room with user inputs\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\n    //check room and set to a room\n    room ?\n    /*#__PURE__*/\n    // ROOM EXIST! --> open Chat component\n    _jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Chat, {\n        room: room,\n        userChatName: userChatName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this) :\n    /*#__PURE__*/\n    //  ROOM DOES NOT EXIST\n    _jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Enter Your Chat Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: chatNameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Enter Room Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: roomInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRoomAndName(roomInputRef.current.value, chatNameRef.current.value),\n        children: \" Enter Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), \"`\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-out\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUserOut,\n        children: \" Sign Out \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rQFtVTEEZqKTuHChDSNiiJ9m0yQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Auth","Cookies","Chat","signOut","auth","catImage","jsxDEV","_jsxDEV","Fragment","_Fragment","cookies","App","_s","isAuth","setIsAuth","get","room","setRoom","userChatName","setUserChatName","roomInputRef","chatNameRef","signUserOut","remove","setRoomAndName","roomName","chatName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","onClick","current","value","_c","$RefreshReg$"],"sources":["/Users/angelyang/Desktop/realchatapp/src/App.js"],"sourcesContent":["import { useState, useRef} from 'react';\n// import './index.css';\nimport {Auth} from './components/Auth'\n//imports for our cookies\nimport Cookies from 'universal-cookie';\nimport { Chat } from './components/chat';\nimport {signOut} from \"firebase/auth\"\nimport {auth} from './firebase-config'\nimport './App.css';\nimport catImage from './images/catimg.png';\n\nconst cookies = new Cookies();\n\nfunction App() {\n\n  //will constantly check T/F whether the user is authenticated or not when app is running\n  //must check the refresh token that was stored inside Auth.js using the cookies's getter under the name \"auth-token\"\n  //initial authentication value will be set to the auth-token; null if never authenticated\n  const [isAuth, setIsAuth] = useState(cookies.get(\"auth-token\"));\n\n  //state that keeps track of our chatroom\n  const [room, setRoom] = useState(null);\n\n  //state that keeps track of user chat name\n  const [userChatName, setUserChatName] = useState(\"\");\n\n  //used to hold a reference to the user input\n  const roomInputRef = useRef(null);\n\n  const chatNameRef = useRef(null);\n\n  //function to sign user out of their google account\n  const signUserOut =  async () => {\n    await signOut(auth);\n    //remove the cookies from the browser with login info\n    cookies.remove(\"auth-token\");\n    //set authentication back to false\n    setIsAuth(false);\n    //disable the room to null\n    setRoom(null);\n  }\n\n  // updates the states for both room name and user's chat name\n  const setRoomAndName = (roomName, chatName) => {\n    setRoom(roomName);\n    setUserChatName(chatName);\n  }\n\n\n  //if the user is not authenticated, show them the login page.\n  //Else, navigate to the chat room\n  if (!isAuth) {\n\n    return (\n      <div className=\"App\">\n        <div className=\"app-header\"> \n            <h1> Welcome to Meow Chat Room </h1>\n        </div>\n        <img className=\"app-img\" src={catImage} alt=\"Image of a cat\"/>\n        {/** NAVIGATE TO LOGIN PAGE */}\n        {/** pass in auth state to be changed when user authenticates*/}\n        <Auth setIsAuth = {setIsAuth}/>\n      </div>\n    );\n  } \n\n  //if user is authenticated...\n  //if room exist --> go to the chat room \n  //if room does NOT exist --> create chat room with user inputs\n  \n  return (\n  <> \n    {\n    //check room and set to a room\n    room ? \n      // ROOM EXIST! --> open Chat component\n    (<div> <Chat room={room} userChatName={userChatName}/> </div>) : \n\n    //  ROOM DOES NOT EXIST\n    (\n    <div className=\"room\"> \n    <label> Enter Your Chat Name: </label>\n    <input ref={chatNameRef}/>\n    {/* <button onClick={() => setUserChatName(chatNameRef.current.value)}> create chat name </button> */}\n\n    <label> Enter Room Name: </label>\n      {/** grabs the input and stores it inside roomInputRef*/}\n    <input ref={roomInputRef}/>\n\n      {/** room state will be set to the value of roomInputRef AKA chat name set by users */}\n    <button onClick={() => setRoomAndName(roomInputRef.current.value, chatNameRef.current.value)}> Enter Chat</button>\n    </div>\n    \n    )}\n  \n  `<div className=\"sign-out\">\n      <button onClick={signUserOut}> Sign Out </button>\n  </div>\n  </>\n  \n  );\n\n \n  \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}