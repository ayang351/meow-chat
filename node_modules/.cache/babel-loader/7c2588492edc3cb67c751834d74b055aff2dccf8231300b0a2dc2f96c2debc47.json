{"ast":null,"code":"var _jsxFileName = \"/Users/angelyang/Desktop/chatapp/src/components/Auth.js\";\n//import firebase config variables created in firebase-config file\nimport { auth, provider } from \"../firebase-config.js\";\n\n//import relevant built-in function from firebase\nimport { signInWithPopup } from \"firebase/auth\";\n\n//import Cookies from the universal cookie library\nimport Cookies from 'universal-cookie';\n\n//create a reference for your cookie\n//can get(), set(), remove() cookies in the browser\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nexport const Auth = () => {\n  //function that returns a promise to allow users to sign in with a pop-up\n  //provided 2 arguments: (1) the authentication info (2) the provider from firebase-config.js\n  const signInWithGoogle = async () => {\n    //will return an object with email, displayname, profile pic\n    const result = await signInWithPopup(auth, provider);\n\n    //set up cookies upon sign-in\n    //we want the refresh token to be stored in our cookie\n    cookies.set(\"auth-token\", result.user.refreshToken);\n\n    //testing\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Sign In with Google \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogle,\n      children: \" Sign in With Google \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["auth","provider","signInWithPopup","Cookies","jsxDEV","_jsxDEV","cookies","Auth","signInWithGoogle","result","set","user","refreshToken","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/angelyang/Desktop/chatapp/src/components/Auth.js"],"sourcesContent":["//import firebase config variables created in firebase-config file\nimport {auth, provider} from \"../firebase-config.js\"\n\n//import relevant built-in function from firebase\nimport {signInWithPopup} from \"firebase/auth\"\n\n//import Cookies from the universal cookie library\nimport Cookies from 'universal-cookie'\n\n//create a reference for your cookie\n//can get(), set(), remove() cookies in the browser\nconst cookies = new Cookies();\n\n\nexport const Auth = () => {\n    \n    //function that returns a promise to allow users to sign in with a pop-up\n    //provided 2 arguments: (1) the authentication info (2) the provider from firebase-config.js\n    const signInWithGoogle = async () => {\n        //will return an object with email, displayname, profile pic\n        const result = await signInWithPopup(auth, provider);\n\n        //set up cookies upon sign-in\n        //we want the refresh token to be stored in our cookie\n        cookies.set(\"auth-token\", result.user.refreshToken);\n    \n\n        //testing\n        console.log(result);\n    }\n    \n    \n    \n    \n    return (\n        <div className=\"auth\">\n            <p> Sign In with Google </p>\n            <button onClick={signInWithGoogle}> Sign in With Google </button>\n\n        </div>\n    );\n}"],"mappings":";AAAA;AACA,SAAQA,IAAI,EAAEC,QAAQ,QAAO,uBAAuB;;AAEpD;AACA,SAAQC,eAAe,QAAO,eAAe;;AAE7C;AACA,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,IAAIH,OAAO,CAAC,CAAC;AAG7B,OAAO,MAAMI,IAAI,GAAGA,CAAA,KAAM;EAEtB;EACA;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC;IACA,MAAMC,MAAM,GAAG,MAAMP,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;;IAEpD;IACA;IACAK,OAAO,CAACI,GAAG,CAAC,YAAY,EAAED,MAAM,CAACE,IAAI,CAACC,YAAY,CAAC;;IAGnD;IACAC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACvB,CAAC;EAKD,oBACIJ,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBX,OAAA;MAAAW,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5Bf,OAAA;MAAQgB,OAAO,EAAEb,gBAAiB;MAAAQ,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhE,CAAC;AAEd,CAAC;AAAAE,EAAA,GA3BYf,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}